
- name: Abrir puerto https
  firewalld:
    service: https
    permanent: true
    state: enabled
  tags: app

- name: Abrir puerto 30000
  firewalld:
    port: 30000/tcp
    permanent: true
    state: enabled

- name: Hacer un reload de firewalld
  systemd:
    name: firewalld
    state: reloaded
  tags: app

- name: 'Crear directorio git'
  file:
    path: ./unir-cp2-app
    state: directory
    mode: 0755
  tags: app

- name: Install git
  yum:
    name: git
    state: present
    update_cache: yes
  tags: app

- name: 'Git clone'
  git:
    repo: https://github.com/ReBedc/unir-cp2-app.git
    dest: ./unir-cp2-app
    clone: yes
    update: yes
    version: master
  tags: app

- name: 'Crear namespace'
  command: kubectl create namespace jenkins-nm2
  run_once: true
  register: command_result
  failed_when: "'Updating' in command_result.stdout"
  tags: app

# - name: 'Crear service'
#   command: kubectl apply -f ./unir-cp2-app/jenkins-service.yaml --namespace jenkins-nm2
#   tags: app

# - name: 'Crear PV'
#   command: kubectl create -f ./unir-cp2-app/jenkins-pv.yaml --namespace jenkins-nm2
#   tags: app

- name: 'Crear deployment'
  command: kubectl create -f ./unir-cp2-app/jenkins-deployment.yaml --namespace jenkins-nm2
  tags: app

#-------------------------------------------------
# - name: 'Git clone'
#   git:
#     repo: https://github.com/ReBedc/unir-cp2-mongo.git
#     dest: ./unir-cp2-mongo
#     clone: yes
#     update: yes
#     version: master
#   tags: app


# - name: 'Crear namespace'
#   command: kubectl create namespace mongodb-namespace
#   run_once: true
#   register: command_result
#   failed_when: "'Updating' in command_result.stdout"
#   tags: app

# - name: 'Crear secretos'
#   command: kubectl apply -f ./unir-cp2-mongo/mongodb-secrets.yaml -n mongodb-namespace
#   tags: app


# - name: 'Crear PV'
#   command: kubectl create -f ./unir-cp2-mongo/mongodb-pv.yaml --namespace mongodb-namespace
#   tags: app

# - name: 'Crear PVC'
#   command: kubectl create -f ./unir-cp2-mongo/mongodb-pvc.yaml --namespace mongodb-namespace
#   tags: app

# - name: 'Crear deployment'
#   command: kubectl create -f ./unir-cp2-mongo/mongo-deployment.yaml --namespace mongodb-namespace
#   tags: app

# - name: 'Crear service'
#   command: kubectl create -f ./unir-cp2-mongo/mongo-service.yaml --namespace mongodb-namespace
#   tags: app

# - name: 'Crear mongo client'
#   command: kubectl create -f ./unir-cp2-mongo/mongodb-client.yaml --namespace mongodb-namespace
#   tags: app

