# Playbook que lanza las órdenes necesarias para que el nodo worker pueda hacer join en el cluster de Kubernetes 
#   creado con el nodo master.
# Para ello primero se genera el comando join en el nodo master y se almacena en una variable, para a continuación
#   consumir el contenido de esa variable y ejecutarlo en el nodo worker.
# Se ha agregado una pausa al final para asegurar que el siguiente playbook se lance cuando el worker esté disponible.

# Para ejecutar el playbook correctamente:
# $ ansible-playbook -i inventory playbook_join.yaml
---
- hosts: master
  remote_user: azureuser
  become: true
  gather_facts: false
  vars_files:
    - vars.yaml
  tasks:
  - name: 'Crear un nuevo token para el join del worker'
    command: kubeadm token create --print-join-command
    register: join_command
  
  - debug:
      var: join_command
  
  - name: 'Setear variable join_command'
    set_fact:
      join_command: "{{ join_command.stdout_lines[0] }}"

- hosts: worker
  remote_user: azureuser
  become: true
  gather_facts: false
  tasks:

  - name: 'Obtener ip master'
    set_fact:
      ip_master_obtenida: "{{ ip_master }}"

  - name: 'Crear comando resultado'
    set_fact:
      comando_result: "{{ hostvars[ip_master_obtenida].join_command }}"
  - debug:
      var: comando_result

  - name: 'Agregamos worker al cluster'
    become: yes
    shell: "{{ comando_result }}"

  - pause: seconds=90
